---
title: "booklet maps"
format: pdf
editor: visual
---
# Booklet maps


```{r}
#| message: false
#| warning: false
#| include: false

# Add packages: 
#devtools::install_github("SANBI-NBA/nbaR")
library(tidyverse)
library(sf)
library(nbaR)
 
## specify filenames and parameters

map_data_fl <- "^mapdata.gpkg$"

marine_fl <- "^mem_2023_thr_pro.gpkg$"

sa_pei_fl <- "^SA_boundaries_v12.shp$"

```


```{r}
#| message: false
#| warning: false
#| include: false

## load data files

marine <- st_read(list.files(path=here::here("data"), 
                             pattern=marine_fl, 
                             recursive = T, 
                             full.names = T)[1]) 


sa_pei <- st_read(list.files(path=here::here("data"), 
                             pattern=sa_pei_fl, 
                             recursive = T, 
                             full.names = T)[1]) 

map_data <- st_read(list.files(path=here::here("data"), 
                             pattern=map_data_fl, 
                             recursive = T, 
                             full.names = T)[1]) 
#Estuarine = Non-terrestrial (estuarine habitat)
#freshwater = Non-terrestrial (Aquatic)
#why is there an empty T_Name?



```

### data prep

```{r}
#province outlines without eez
provinces <- sa_pei %>% 
  filter(!PROVINCE %in% c("EEZ - Prince Edward Isla*", 
                          "Prince Edward Islands", 
                          "EEZ - mainland marine"))

#province outlines with eez
provinces_eez <- sa_pei %>% 
  filter(!PROVINCE %in% c("EEZ - Prince Edward Isla*", 
                          "Prince Edward Islands"))

#Lesotho and Eswatini
le_esw <- sa_pei %>% 
  filter(PROVINCE %in% c("Lesotho", "Eswatini"))

#PEI
pei <- sa_pei %>% 
  filter(PROVINCE %in% c("EEZ - Prince Edward Isla*", 
                          "Prince Edward Islands"))


#marine benthic ecosystem protection level
marine_benth <- marine %>%
  filter(ecosystem_functional_type_getl3 !="Pelagic ocean waters") %>% 
  ungroup() 

#marine pelagic ecosystem protection level
marine_pel <- marine %>%
  filter(ecosystem_functional_type_getl3 =="Pelagic ocean waters") %>% 
  ungroup() 



## map data to full indicator words
map_data <- map_data %>% 
mutate(RLE = str_replace_all(RLE, "CR","Critically Endangered" ))%>%
mutate(RLE = str_replace_all(RLE, "EN","Endangered" ))%>%
mutate(RLE = str_replace_all(RLE, "VU","Vulnerable" ))%>%
mutate(RLE = str_replace_all(RLE, "NT","Near Threatened" ))%>%
mutate(RLE = str_replace_all(RLE, "LC","Least Concern" ))%>%
  
mutate(epl_nat_inv24 = str_replace_all(epl_nat_inv24, "WP","Well Protected" ))%>%
mutate(epl_nat_inv24 = str_replace_all(epl_nat_inv24, "MP","Moderately Protected" ))%>%
mutate(epl_nat_inv24 = str_replace_all(epl_nat_inv24, "PP","Poorly Protected" ))%>%
mutate(epl_nat_inv24 = str_replace_all(epl_nat_inv24, "NP","Not Protected" )) %>% 
  rename(ecosystem_type = T_Name,
         geom = Shape,
         protection_level = epl_nat_inv24, 
         threat_status = RLE)

##terrestrial

terr <- map_data %>% 
   filter(!ecosystem_type %in% c("Non-terrestrial (estuarine habitat)", 
                          "Non-terrestrial (Aquatic)"))


## estuaries as points
est_pnt <- map_data %>%
  filter(ecosystem_type == "Non-terrestrial (estuarine habitat)") %>% 
  st_cast("POLYGON") %>% #get each polygon
  mutate(eco_extent_km2 = st_area(geom)) %>%
  mutate(eco_extent_km2 = as.numeric(units::set_units(eco_extent_km2, km^2))) %>% 
  st_centroid() %>%   #make points
  mutate(protection_level = factor(protection_level, levels = nbaR::NBA_categories))%>% #match category to it's colour
  mutate(threat_status = factor(threat_status, levels = nbaR::NBA_categories)) %>% #match category to it's colour
  st_jitter(nc_points, amount = 50) #jitter points


freshwater <- map_data %>%
  filter(ecosystem_type == "Non-terrestrial (Aquatic)")


```



## Protection level plots


### terrestrial and benthic marine

```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 28.34646
#| fig-height: 18.89764



#combine terrestrial and marine benthic ecosystem protection level
terr_marine_benth <- marine_benth %>% 
  bind_rows(terr)
  


##map

pro_level <- nbaR::nba_map(terr_marine_benth,
                      geom,
                      FILL = protection_level)


pro_level+
  geom_sf(data=marine_benth, colour = "black", fill = NA) + #add ecosystem outlines for marine
  geom_sf(data=le_esw, colour = "white", fill = "white") + #make lesotho and eswatini white
  geom_sf(data=provinces, colour = "black", fill = NA) #add province outlines
  


ggsave("outputs/EPL_terr_marine.png", height = 48, width = 72, units = 'cm',  bg = "white", dpi = 350)


```


### Estuarine and pelagic marine


```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 28.34646
#| fig-height: 18.89764



pro_level_marine <- nbaR::nba_map(marine_pel,
                      geom,
                      FILL = protection_level)



pro_level_marine+
  geom_sf(data = est_pnt, aes(size = eco_extent_km2, fill = protection_level)) +
  ggplot2::scale_size(range = c(3, 30)) +
  geom_sf(data=marine_pel, colour = "black", fill = NA) + #add ecosystem outlines for marine
  geom_sf(data=le_esw, colour = "white", fill = "white") + #make lesotho and eswatini white
  geom_sf(data=provinces, colour = "black", fill = NA) #add province outlines
  


ggsave("outputs/EPL_est_marine.png", height = 48, width = 72, units = 'cm',  bg = "white", dpi = 350)


```


### Rivers


```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 28.34646
#| fig-height: 18.89764

##Rivers


pro_level <- nbaR::nba_map(freshwater,
                      geom,
                      FILL = protection_level)


pro_level+
  geom_sf(data=le_esw, colour = "white", fill = "white") + #make lesotho and eswatini white
  geom_sf(data=provinces, colour = "black", fill = NA) #add province outlines
  


ggsave("outputs/EPL_rivers.png", height = 48, width = 72, units = 'cm',  bg = "white", dpi = 350)


```

### Wetlands


```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 28.34646
#| fig-height: 18.89764

### will have to think about colouring the lines?

##Wetlands


pro_level <- nbaR::nba_map(freshwater,
                      geom,
                      FILL = protection_level)


pro_level+
  geom_sf(linewidth = 0.5) + #increase the size of the outlines to make the wetlands visible
  geom_sf(data=le_esw, colour = "white", fill = "white") + #make lesotho and eswatini white
  geom_sf(data=provinces, colour = "black", fill = NA) #add province outlines
  


ggsave("outputs/EPL_terr_marine.png", height = 48, width = 72, units = 'cm',  bg = "white", dpi = 350)



```


### Prince Edward Islands


```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 28.34646
#| fig-height: 18.89764

##PEI and SA

pro_level <- nbaR::nba_map(sa_pei,
                      geometry,
                      FILL = PROVINCE )



ggplot()+
  geom_sf(data=sa_pei, colour = "black", fill = NA)+
  theme(legend.position = "none",
                   plot.background = ggplot2::element_blank(),
                   panel.background = ggplot2::element_blank(),
                   panel.border = ggplot2::element_blank(),
                   axis.text = ggplot2::element_blank(),
                   axis.ticks = ggplot2::element_blank())


ggsave("outputs/sa_pei.png", height = 48, width = 72, units = 'cm',  bg = "white", dpi = 350)

```







